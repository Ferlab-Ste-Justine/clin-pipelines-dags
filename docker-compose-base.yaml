x-airflow-common:
  &airflow-common
  image: apache/airflow:2.9.3
  env_file:
    - ./configs/postgres/.env
    - ./configs/airflow/.env
  volumes:
    - ${DAGS_DIR}:/opt/airflow/dags
    - ${KUBE_CONFIG}:/home/airflow/.kube/config
    - ./data/airflow/logs:/opt/airflow/logs
    - ./data/airflow/plugins:/opt/airflow/plugins
  user: "${UID}:0"
  depends_on:
    &airflow-common-depends-on
    redis:
      condition: service_healthy
    postgres:
      condition: service_healthy
  extra_hosts:
      - "minio-external:host-gateway"

services:

  postgres:
    image: postgres:13
    env_file:
      - ./configs/postgres/.env
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:latest
    expose:
      - 6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 50
    restart: unless-stopped

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - ${UI_PORT}:8080
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    depends_on:
      <<: *airflow-common-depends-on
      airflow-init:
        condition: service_completed_successfully

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    healthcheck:
      test: ["CMD-SHELL", 'airflow jobs check --job-type SchedulerJob --hostname "$${HOSTNAME}"']
      interval: 10s
      timeout: 10s
      retries: 5
    restart: unless-stopped 
    depends_on:
      <<: *airflow-common-depends-on
      airflow-init:
        condition: service_completed_successfully

  airflow-worker:
    <<: *airflow-common
    command: celery worker
    healthcheck:
      test:
        - "CMD-SHELL"
        - 'celery --app airflow.executors.celery_executor.app inspect ping -d "celery@$${HOSTNAME}"'
      interval: 10s
      timeout: 10s
      retries: 5
    env_file:
      - ./configs/postgres/.env
      - ./configs/airflow/.env
      - ./configs/airflow/worker/.env
    restart: unless-stopped
    depends_on:
      <<: *airflow-common-depends-on
      airflow-init:
        condition: service_completed_successfully

  airflow-triggerer:
    <<: *airflow-common
    command: triggerer
    healthcheck:
      test: ["CMD-SHELL", 'airflow jobs check --job-type TriggererJob --hostname "$${HOSTNAME}"']
      interval: 10s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    depends_on:
      <<: *airflow-common-depends-on
      airflow-init:
        condition: service_completed_successfully

  airflow-init:
    <<: *airflow-common
    entrypoint: /bin/bash
    command:
      - -c
      - |
        mkdir -p /sources/logs /sources/dags /sources/plugins
        chown -R "${UID}:0" /sources/{logs,dags,plugins}
        exec /entrypoint airflow version
    env_file:
      - ./configs/postgres/.env
      - ./configs/airflow/.env
      - ./configs/airflow/init/.env
    user: "0:0"
    volumes:
      - .:/sources

  airflow-cli:
    <<: *airflow-common
    env_file:
      - ./configs/postgres/.env
      - ./configs/airflow/.env
      - ./configs/airflow/cli/.env
    command:
      - bash
      - -c
      - airflow

  flower:
    <<: *airflow-common
    command: celery flower
    ports:
      - ${FLOWER_PORT}:5555
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:5555"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    depends_on:
      <<: *airflow-common-depends-on
      airflow-init:
        condition: service_completed_successfully

  minio:
    image: minio/minio
    profiles: ['minio']
    command: server /data --console-address ":9001"
    ports:
      - ${MINIO_PORT}:9000
      - ${MINIO_UI_PORT}:9001
    volumes:
      - ./data/minio:/data